<Frame
 CycleDuration="Kernel.CycleDuration"
 Name="MA - Functional tests"
>
<SubSequences>
<SubSequence
 D_LRBG=""
 Level=""
 Mode=""
 NID_LRBG=""
 Q_DIRLRBG=""
 Q_DIRTRAIN=""
 Q_DLRBG=""
 RBC_ID=""
 RBCPhone=""
 Name="MA structure - Danger point"
>
<TestCases>
<TestCase
 Feature="0"
 Case="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="MA structure - Danger point"
>
<ReqRef
 Id="3.8.1.1.c"
>
</ReqRef>
<ReqRef
 Id="3.8.3.3.b"
>
</ReqRef>
<ReqRef
 Id="3.8.1.1"
>
</ReqRef>
<ReqRef
 Id="3.8.3.3"
>
</ReqRef>
<Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step1 - Setup"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>Kernel.InitializeTestEnvironment()</Action>
</Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step2 - New MA received in BG message, level 1"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt; Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;8,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                LEVEL_1_MOVEMENT_AUTHORITY=&gt;Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.Message
                {
                    NID_PACKET=&gt;8,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._10_cm_scaleC,
                    V_MAIN=&gt;16,
                    V_LOA=&gt;8,
                    T_LOA=&gt;200,
                    N_ITER=&gt;0,
                    Sequence1=&gt;[],
                    L_ENDSECTION=&gt;10000,
                    Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                    T_SECTIONTIMER=&gt;0,
                    D_SECTIONTIMERSTOPLOC=&gt;0,
                    Q_ENDTIMER=&gt;Messages.Q_ENDTIMER.No_End_section_timer_information,
                    T_ENDTIMER=&gt;0,
                    D_ENDTIMERSTARTLOC=&gt;0,
                    Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.Danger_point_information_to_follow,
                    D_DP=&gt;12000,
                    V_RELEASEDP=&gt;5,
                    Q_OVERLAP=&gt;Messages.Q_OVERLAP.No_overlap_information,
                    D_STARTOL=&gt;0,
                    T_OL=&gt;0,
                    D_OL=&gt;0,
                    V_RELEASEOL=&gt;0
                }
            }
        }
    ]
}</Action>
<Action>Kernel.MA.MA &lt;- EMPTY</Action>
<Action>BTM.LRBG &lt;- BTM.BaliseGroup
{
    NID =&gt; 9618,
    Orientation =&gt; Orientation.Nominal,
    Position =&gt; BTM.Position
    {
        OverReadingAmountOdo =&gt; 29.0,
        Position =&gt; 2000.0,
        UnderReadingAmountOdo =&gt; 35.0
    }
}</Action>
<Action>Odometry.Accuracy &lt;- Odometry.OdometerAccuracy
{
    D_ura =&gt; 54.0,
    D_ora =&gt; 51.0,
    V_ora =&gt; 0.0,
    V_ura =&gt; 0.0
}</Action>
</Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Available ( Kernel.MA.MA )</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.MA.EndSection.DangerPoint.ReleaseSpeed == 25.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.MA.EndSection.DangerPoint.Distance == 1200.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.SpeedAndDistanceMonitoring.ReleaseSpeedSupervision.ReleaseSpeed == 25.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step3 - New MA received in BG message, level 2"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt;Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;8,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                LEVEL_2_3_MOVEMENT_AUTHORITY=&gt;Messages.PACKET.TRACK_TO_TRAIN.LEVEL_2_3_MOVEMENT_AUTHORITY.Message
                {
                    NID_PACKET=&gt;8,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._10_cm_scaleC,
                    V_LOA=&gt;5,
                    T_LOA=&gt;150,
                    N_ITER=&gt;0,
                    Sequence1=&gt;[],
                    L_ENDSECTION=&gt;800,
                    Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                    T_SECTIONTIMER=&gt;0,
                    D_SECTIONTIMERSTOPLOC=&gt;0,
                    Q_ENDTIMER=&gt;Messages.Q_ENDTIMER.No_End_section_timer_information,
                    T_ENDTIMER=&gt;0,
                    D_ENDTIMERSTARTLOC=&gt;0,
                    Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.Danger_point_information_to_follow,
                    D_DP=&gt;8400,
                    V_RELEASEDP=&gt;4,
                    Q_OVERLAP=&gt;Messages.Q_OVERLAP.No_overlap_information,
                    D_STARTOL=&gt;0,
                    T_OL=&gt;0,
                    D_OL=&gt;0,
                    V_RELEASEOL=&gt;0
                }
            }
        }
    ]
}</Action>
<Action>Kernel.MA.MA &lt;- EMPTY</Action>
</Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Available ( Kernel.MA.MA )</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.SpeedAndDistanceMonitoring.ReleaseSpeedSupervision.ReleaseSpeed == 20.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.MA.EndSection.DangerPoint.ReleaseSpeed == 20.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.MA.EndSection.DangerPoint.Distance == 840.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase></TestCases>
</SubSequence><SubSequence
 D_LRBG=""
 Level=""
 Mode=""
 NID_LRBG=""
 Q_DIRLRBG=""
 Q_DIRTRAIN=""
 Q_DLRBG=""
 RBC_ID=""
 RBCPhone=""
 Name="MA structure - Default fields"
>
<TestCases>
<TestCase
 Feature="0"
 Case="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="MA structure - Default fields"
>
<ReqRef
 Id="3.8.1.1.a"
>
</ReqRef>
<ReqRef
 Id="3.8.1.1.b"
>
</ReqRef>
<ReqRef
 Id="3.11.6.1"
>
</ReqRef>
<ReqRef
 Id="3.8.1.1"
>
</ReqRef>
<ReqRef
 Id="3.11.2.2.e"
>
</ReqRef>
<Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step1 - Setup"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>Kernel.InitializeTestEnvironment()</Action>
</Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step2 - New MA received in BG message, level 1"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt;Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;8,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                LEVEL_1_MOVEMENT_AUTHORITY=&gt;Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.Message
                {
                    NID_PACKET=&gt;8,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    V_MAIN=&gt;16,
                    V_LOA=&gt;8,
                    T_LOA=&gt;200,
                    N_ITER=&gt;0,
                    Sequence1=&gt;[],
                    L_ENDSECTION=&gt;1000,
                    Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                    T_SECTIONTIMER=&gt;0,
                    D_SECTIONTIMERSTOPLOC=&gt;0,
                    Q_ENDTIMER=&gt;Messages.Q_ENDTIMER.No_End_section_timer_information,
                    T_ENDTIMER=&gt;0,
                    D_ENDTIMERSTARTLOC=&gt;0,
                    Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.No_danger_point_information,
                    D_DP=&gt;0,
                    V_RELEASEDP=&gt;0,
                    Q_OVERLAP=&gt;Messages.Q_OVERLAP.No_overlap_information,
                    D_STARTOL=&gt;0,
                    T_OL=&gt;0,
                    D_OL=&gt;0,
                    V_RELEASEOL=&gt;0
                }
            }
        }
    ]
}</Action>
<Action>Kernel.MA.MA &lt;- EMPTY</Action>
<Action>BTM.LRBG &lt;- BTM.BaliseGroup
{
    NID =&gt; 9620,
    Orientation =&gt; Orientation.Nominal,
    Position =&gt; BTM.Position
    {
        OverReadingAmountOdo =&gt; 44.0,
        Position =&gt; 2500.0,
        UnderReadingAmountOdo =&gt; 44.0
    }
}</Action>
<Action>Odometry.Accuracy &lt;- Odometry.OdometerAccuracy
{
    D_ura =&gt; 49.0,
    D_ora =&gt; 48.0,
    V_ora =&gt; 0.0,
    V_ura =&gt; 0.0
}</Action>
</Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Available ( Kernel.MA.MA )</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.SignallingRelatedSpeedRestriction == 80.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.MA.Sections == EMPTY</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.MA.TargetSpeed == 40.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.MA.TargetSpeedTimeOut == 200.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.MA.EndSection.Length == 1000.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.MA.EndSection.Overlap == EMPTY</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.MA.EndSection.EndSectionTimeOut == EMPTY</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.MA.EndSection.DangerPoint == EMPTY</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step3 - Check EOA"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Kernel.MA.EndOfMovementAuthority().Location == 1000.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.EndOfMovementAuthority().Speed == 40.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step4 - New MA received in BG message, level 2"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt;Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;8,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                LEVEL_2_3_MOVEMENT_AUTHORITY=&gt;Messages.PACKET.TRACK_TO_TRAIN.LEVEL_2_3_MOVEMENT_AUTHORITY.Message
                {
                    NID_PACKET=&gt;8,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._10_m_scaleC,
                    V_LOA=&gt;5,
                    T_LOA=&gt;150,
                    N_ITER=&gt;0,
                    Sequence1=&gt;[],
                    L_ENDSECTION=&gt;80,
                    Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                    T_SECTIONTIMER=&gt;0,
                    D_SECTIONTIMERSTOPLOC=&gt;0,
                    Q_ENDTIMER=&gt;Messages.Q_ENDTIMER.No_End_section_timer_information,
                    T_ENDTIMER=&gt;0,
                    D_ENDTIMERSTARTLOC=&gt;0,
                    Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.No_danger_point_information,
                    D_DP=&gt;0,
                    V_RELEASEDP=&gt;0,
                    Q_OVERLAP=&gt;Messages.Q_OVERLAP.No_overlap_information,
                    D_STARTOL=&gt;0,
                    T_OL=&gt;0,
                    D_OL=&gt;0,
                    V_RELEASEOL=&gt;0
                }
            }
        }
    ]
}</Action>
<Action>Kernel.MA.MA &lt;- EMPTY</Action>
</Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Available ( Kernel.MA.MA )</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.MA.Sections == EMPTY</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.MA.TargetSpeed == 25.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.MA.TargetSpeedTimeOut == 150.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.MA.EndSection.Length == 800.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.MA.EndSection.EndSectionTimeOut == EMPTY</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.MA.EndSection.Overlap == EMPTY</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.MA.EndSection.DangerPoint == EMPTY</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step5 - Check EOA"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Kernel.MA.EndOfMovementAuthority().Location == 800.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.EndOfMovementAuthority().Speed == 25.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase></TestCases>
</SubSequence><SubSequence
 D_LRBG=""
 Level=""
 Mode=""
 NID_LRBG=""
 Q_DIRLRBG=""
 Q_DIRTRAIN=""
 Q_DLRBG=""
 RBC_ID=""
 RBCPhone=""
 Name="MA structure - End section time-out"
>
<TestCases>
<TestCase
 Feature="0"
 Case="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="MA structure - End section time-out"
>
<ReqRef
 Id="3.8.1.1"
>
</ReqRef>
<ReqRef
 Id="3.8.3.3.a"
>
</ReqRef>
<ReqRef
 Id="3.8.3.3"
>
</ReqRef>
<Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step1 - Setup"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>Kernel.InitializeTestEnvironment()</Action>
</Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step2 - New MA received in BG message, level 1"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt;Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;8,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                LEVEL_1_MOVEMENT_AUTHORITY=&gt;Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.Message
                {
                    NID_PACKET=&gt;8,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    V_MAIN=&gt;16,
                    V_LOA=&gt;8,
                    T_LOA=&gt;200,
                    N_ITER=&gt;0,
                    Sequence1=&gt;[],
                    L_ENDSECTION=&gt;1000,
                    Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                    T_SECTIONTIMER=&gt;0,
                    D_SECTIONTIMERSTOPLOC=&gt;0,
                    Q_ENDTIMER=&gt;Messages.Q_ENDTIMER.End_section_timer_information_to_follow,
                    T_ENDTIMER=&gt;200,
                    D_ENDTIMERSTARTLOC=&gt;900,
                    Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.No_danger_point_information,
                    D_DP=&gt;0,
                    V_RELEASEDP=&gt;0,
                    Q_OVERLAP=&gt;Messages.Q_OVERLAP.No_overlap_information,
                    D_STARTOL=&gt;0,
                    T_OL=&gt;0,
                    D_OL=&gt;0,
                    V_RELEASEOL=&gt;0
                }
            }
        }
    ]
}</Action>
<Action>Kernel.MA.MA &lt;- EMPTY</Action>
<Action>BTM.LRBG &lt;- BTM.BaliseGroup
{
    NID =&gt; 9622,
    Orientation =&gt; Orientation.Nominal,
    Position =&gt; BTM.Position
    {
        OverReadingAmountOdo =&gt; 58.0,
        Position =&gt; 3000.0,
        UnderReadingAmountOdo =&gt; 64.0
    }
}</Action>
<Action>Odometry.Accuracy &lt;- Odometry.OdometerAccuracy
{
    D_ura =&gt; 88.0,
    D_ora =&gt; 75.0,
    V_ora =&gt; 0.0,
    V_ura =&gt; 0.0
}</Action>
</Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Available ( Kernel.MA.MA )</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.MA.EndSection.EndSectionTimeOut.Distance == 900.0</Expectation><Expectation
 Kind="Instantaneous"
>Available(Kernel.MA.MA.EndSection.EndSectionTimeOut)</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.MA.EndSection.EndSectionTimeOut.TimeOut == 200.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step3 - New MA received in BG message, level 2"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt;Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;8,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                LEVEL_2_3_MOVEMENT_AUTHORITY=&gt;Messages.PACKET.TRACK_TO_TRAIN.LEVEL_2_3_MOVEMENT_AUTHORITY.Message
                {
                    NID_PACKET=&gt;8,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._10_cm_scaleC,
                    V_LOA=&gt;5,
                    T_LOA=&gt;150,
                    N_ITER=&gt;0,
                    Sequence1=&gt;[],
                    L_ENDSECTION=&gt;8000,
                    Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                    T_SECTIONTIMER=&gt;0,
                    D_SECTIONTIMERSTOPLOC=&gt;0,
                    Q_ENDTIMER=&gt;Messages.Q_ENDTIMER.End_section_timer_information_to_follow,
                    T_ENDTIMER=&gt;140,
                    D_ENDTIMERSTARTLOC=&gt;8200,
                    Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.No_danger_point_information,
                    D_DP=&gt;0,
                    V_RELEASEDP=&gt;0,
                    Q_OVERLAP=&gt;Messages.Q_OVERLAP.No_overlap_information,
                    D_STARTOL=&gt;0,
                    T_OL=&gt;0,
                    D_OL=&gt;0,
                    V_RELEASEOL=&gt;0
                }
            }
        }
    ]
}</Action>
<Action>Kernel.MA.MA &lt;- EMPTY</Action>
</Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Available ( Kernel.MA.MA )</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.MA.EndSection.EndSectionTimeOut.TimeOut == 140.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.MA.EndSection.EndSectionTimeOut.Distance == 820.0</Expectation><Expectation
 Kind="Instantaneous"
>Available(Kernel.MA.MA.EndSection.EndSectionTimeOut)</Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase></TestCases>
</SubSequence><SubSequence
 D_LRBG=""
 Level=""
 Mode=""
 NID_LRBG=""
 Q_DIRLRBG=""
 Q_DIRTRAIN=""
 Q_DLRBG=""
 RBC_ID=""
 RBCPhone=""
 Name="Release speed"
>
<TestCases>
<TestCase
 Feature="0"
 Case="0"
 Implemented="TRUE"
 Name="Release speed"
>
<ReqRef
 Id="3.8.1.1.e"
>
</ReqRef>
<ReqRef
 Id="3.8.1.1"
>
</ReqRef>
<Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step1 - Setup"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>Kernel.InitializeTestEnvironment()</Action>
</Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step2 - New MA with Danger Point received"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt;Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;8,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                LEVEL_1_MOVEMENT_AUTHORITY=&gt;Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.Message
                {
                    NID_PACKET=&gt;8,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._10_cm_scaleC,
                    V_MAIN=&gt;16,
                    V_LOA=&gt;8,
                    T_LOA=&gt;200,
                    N_ITER=&gt;0,
                    Sequence1=&gt;[],
                    L_ENDSECTION=&gt;10000,
                    Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                    T_SECTIONTIMER=&gt;0,
                    D_SECTIONTIMERSTOPLOC=&gt;0,
                    Q_ENDTIMER=&gt;Messages.Q_ENDTIMER.No_End_section_timer_information,
                    T_ENDTIMER=&gt;0,
                    D_ENDTIMERSTARTLOC=&gt;0,
                    Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.Danger_point_information_to_follow,
                    D_DP=&gt;12000,
                    V_RELEASEDP=&gt;5,
                    Q_OVERLAP=&gt;Messages.Q_OVERLAP.No_overlap_information,
                    D_STARTOL=&gt;0,
                    T_OL=&gt;0,
                    D_OL=&gt;0,
                    V_RELEASEOL=&gt;0
                }
            }
        }
    ]
}</Action>
<Action>BTM.LRBG &lt;- BTM.BaliseGroup
{
    NID =&gt; 9628,
    Orientation =&gt; Orientation.Nominal,
    Position =&gt; BTM.Position
    {
        OverReadingAmountOdo =&gt; 21.0,
        Position =&gt; 4500.0,
        UnderReadingAmountOdo =&gt; 21.0
    }
}</Action>
<Action>Odometry.Accuracy &lt;- Odometry.OdometerAccuracy
{
    D_ura =&gt; 27.0,
    D_ora =&gt; 26.0,
    V_ora =&gt; 0.0,
    V_ura =&gt; 0.0
}</Action>
</Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Kernel.SpeedAndDistanceMonitoring.ReleaseSpeedSupervision.ReleaseSpeed == 25.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step3 - New MA with Overlap received"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt;Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;8,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                LEVEL_2_3_MOVEMENT_AUTHORITY=&gt;Messages.PACKET.TRACK_TO_TRAIN.LEVEL_2_3_MOVEMENT_AUTHORITY.Message
                {
                    NID_PACKET=&gt;8,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._10_cm_scaleC,
                    V_LOA=&gt;5,
                    T_LOA=&gt;150,
                    N_ITER=&gt;0,
                    Sequence1=&gt;[],
                    L_ENDSECTION=&gt;8000,
                    Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                    T_SECTIONTIMER=&gt;0,
                    D_SECTIONTIMERSTOPLOC=&gt;0,
                    Q_ENDTIMER=&gt;Messages.Q_ENDTIMER.No_End_section_timer_information,
                    T_ENDTIMER=&gt;0,
                    D_ENDTIMERSTARTLOC=&gt;0,
                    Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.No_danger_point_information,
                    D_DP=&gt;0,
                    V_RELEASEDP=&gt;0,
                    Q_OVERLAP=&gt;Messages.Q_OVERLAP.Overlap_information_to_follow,
                    D_STARTOL=&gt;9000,
                    T_OL=&gt;70,
                    D_OL=&gt;500,
                    V_RELEASEOL=&gt;4
                }
            }
        }
    ]
}</Action>
</Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Kernel.SpeedAndDistanceMonitoring.ReleaseSpeedSupervision.ReleaseSpeed == 20.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step4 - New MA with Overlap and Danger Point received"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt;Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;8,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                LEVEL_2_3_MOVEMENT_AUTHORITY=&gt;Messages.PACKET.TRACK_TO_TRAIN.LEVEL_2_3_MOVEMENT_AUTHORITY.Message
                {
                    NID_PACKET=&gt;8,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    V_LOA=&gt;5,
                    T_LOA=&gt;150,
                    N_ITER=&gt;0,
                    Sequence1=&gt;[],
                    L_ENDSECTION=&gt;800,
                    Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                    T_SECTIONTIMER=&gt;0,
                    D_SECTIONTIMERSTOPLOC=&gt;0,
                    Q_ENDTIMER=&gt;Messages.Q_ENDTIMER.No_End_section_timer_information,
                    T_ENDTIMER=&gt;0,
                    D_ENDTIMERSTARTLOC=&gt;0,
                    Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.Danger_point_information_to_follow,
                    D_DP=&gt;850,
                    V_RELEASEDP=&gt;6,
                    Q_OVERLAP=&gt;Messages.Q_OVERLAP.Overlap_information_to_follow,
                    D_STARTOL=&gt;900,
                    T_OL=&gt;70,
                    D_OL=&gt;1000,
                    V_RELEASEOL=&gt;7
                }
            }
        }
    ]
}</Action>
</Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Kernel.SpeedAndDistanceMonitoring.ReleaseSpeedSupervision.ReleaseSpeed == 35.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step5 - New MA with no Overlap nor Danger Point received"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt;Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;8,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                LEVEL_1_MOVEMENT_AUTHORITY=&gt;Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.Message
                {
                    NID_PACKET=&gt;8,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._10_cm_scaleC,
                    V_MAIN=&gt;80,
                    V_LOA=&gt;40,
                    T_LOA=&gt;200,
                    N_ITER=&gt;0,
                    Sequence1=&gt;[],
                    L_ENDSECTION=&gt;1000,
                    Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                    T_SECTIONTIMER=&gt;0,
                    D_SECTIONTIMERSTOPLOC=&gt;0,
                    Q_ENDTIMER=&gt;Messages.Q_ENDTIMER.No_End_section_timer_information,
                    T_ENDTIMER=&gt;0,
                    D_ENDTIMERSTARTLOC=&gt;0,
                    Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.No_danger_point_information,
                    D_DP=&gt;0,
                    V_RELEASEDP=&gt;0,
                    Q_OVERLAP=&gt;Messages.Q_OVERLAP.No_overlap_information,
                    D_STARTOL=&gt;0,
                    T_OL=&gt;0,
                    D_OL=&gt;0,
                    V_RELEASEOL=&gt;0
                }
            }
        }
    ]
}</Action>
</Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Kernel.SpeedAndDistanceMonitoring.ReleaseSpeedSupervision.ReleaseSpeed == 0.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase></TestCases>
</SubSequence><SubSequence
 D_LRBG=""
 Level=""
 Mode=""
 NID_LRBG=""
 Q_DIRLRBG=""
 Q_DIRTRAIN=""
 Q_DLRBG=""
 RBC_ID=""
 RBCPhone=""
 Name="MA structure - Sections"
>
<TestCases>
<TestCase
 Feature="0"
 Case="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="MA structure - Sections"
>
<ReqRef
 Id="3.8.1.1.a"
>
</ReqRef>
<ReqRef
 Id="3.8.1.1.f"
>
</ReqRef>
<ReqRef
 Id="3.8.3.1"
>
</ReqRef>
<ReqRef
 Id="3.8.1.1.f.1"
>
</ReqRef>
<ReqRef
 Id="3.8.1.1.f.2"
>
</ReqRef>
<ReqRef
 Id="3.8.1.1"
>
</ReqRef>
<ReqRef
 Id="3.8.3.2"
>
</ReqRef>
<ReqRef
 Id="3.8.3.2.a"
>
</ReqRef>
<ReqRef
 Id="3.8.3.2.b"
>
</ReqRef>
<Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step1 - Setup"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>Kernel.InitializeTestEnvironment()</Action>
</Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step2 - New MA received in BG message, level 1"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt;Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;8,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                LEVEL_1_MOVEMENT_AUTHORITY=&gt;Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.Message
                {
                    NID_PACKET=&gt;8,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    V_MAIN=&gt;16,
                    V_LOA=&gt;8,
                    T_LOA=&gt;200,
                    N_ITER=&gt;4,
                    Sequence1=&gt;
                    [
                        Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.SubStructure1
                        {
                            L_SECTION=&gt;120,
                            Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.Section_Timer_information_to_follow,
                            D_SECTIONTIMERSTOPLOC=&gt;20,
                            T_SECTIONTIMER=&gt;40
                        },
                        Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.SubStructure1
                        {
                            L_SECTION=&gt;140,
                            Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                            D_SECTIONTIMERSTOPLOC=&gt;0,
                            T_SECTIONTIMER=&gt;0
                        },
                        Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.SubStructure1
                        {
                            L_SECTION=&gt;100,
                            Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.Section_Timer_information_to_follow,
                            D_SECTIONTIMERSTOPLOC=&gt;25,
                            T_SECTIONTIMER=&gt;20
                        },
                        Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.SubStructure1
                        {
                            L_SECTION=&gt;140,
                            Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.Section_Timer_information_to_follow,
                            D_SECTIONTIMERSTOPLOC=&gt;40,
                            T_SECTIONTIMER=&gt;25
                        }
                    ],
                    L_ENDSECTION=&gt;1000,
                    Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                    T_SECTIONTIMER=&gt;0,
                    D_SECTIONTIMERSTOPLOC=&gt;0,
                    Q_ENDTIMER=&gt;Messages.Q_ENDTIMER.No_End_section_timer_information,
                    T_ENDTIMER=&gt;0,
                    D_ENDTIMERSTARTLOC=&gt;0,
                    Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.No_danger_point_information,
                    D_DP=&gt;0,
                    V_RELEASEDP=&gt;0,
                    Q_OVERLAP=&gt;Messages.Q_OVERLAP.No_overlap_information,
                    D_STARTOL=&gt;0,
                    T_OL=&gt;0,
                    D_OL=&gt;0,
                    V_RELEASEOL=&gt;0
                }
            }
        }
    ]
}</Action>
<Action>Kernel.MA.MA &lt;- EMPTY</Action>
<Action>BTM.LRBG &lt;- BTM.BaliseGroup
{
    NID =&gt; 9626,
    Orientation =&gt; Orientation.Nominal,
    Position =&gt; BTM.Position
    {
        OverReadingAmountOdo =&gt; 11.0,
        Position =&gt; 4000.0,
        UnderReadingAmountOdo =&gt; 12.0
    }
}</Action>
<Action>Odometry.Accuracy &lt;- Odometry.OdometerAccuracy
{
    D_ura =&gt; 15.0,
    D_ora =&gt; 20.0,
    V_ora =&gt; 0.0,
    V_ura =&gt; 0.0
}</Action>
</Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Available ( Kernel.MA.MA )</Expectation><Expectation
 Kind="Instantaneous"
>Available(Kernel.MA.MA.Sections)</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step3 - Check EOA + section info"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Kernel.MA.EndOfMovementAuthority().Location == 1500.0</Expectation><Expectation
 Kind="Instantaneous"
>(FIRST_IN Kernel.MA.MA.Sections).Length == 120.0</Expectation><Expectation
 Kind="Instantaneous"
>(FIRST_IN Kernel.MA.MA.Sections).TimeOut.TimeOut == 40.0</Expectation><Expectation
 Kind="Instantaneous"
>(FIRST_IN Kernel.MA.MA.Sections).TimeOut.Distance == 20.0</Expectation><Expectation
 Kind="Instantaneous"
>Available ( ( FIRST_IN Kernel.MA.MA.Sections ).TimeOut )</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.EndOfMovementAuthority().Speed == 40.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step4 - New MA received in BG message, level 2"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt;Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;8,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                LEVEL_2_3_MOVEMENT_AUTHORITY=&gt;Messages.PACKET.TRACK_TO_TRAIN.LEVEL_2_3_MOVEMENT_AUTHORITY.Message
                {
                    NID_PACKET=&gt;8,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._10_m_scaleC,
                    V_LOA=&gt;5,
                    T_LOA=&gt;150,
                    N_ITER=&gt;3,
                    Sequence1=&gt;
                    [
                        Messages.PACKET.TRACK_TO_TRAIN.LEVEL_2_3_MOVEMENT_AUTHORITY.SubStructure1
                        {
                            L_SECTION=&gt;17,
                            Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                            D_SECTIONTIMERSTOPLOC=&gt;0,
                            T_SECTIONTIMER=&gt;0
                        },
                        Messages.PACKET.TRACK_TO_TRAIN.LEVEL_2_3_MOVEMENT_AUTHORITY.SubStructure1
                        {
                            L_SECTION=&gt;20,
                            Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                            D_SECTIONTIMERSTOPLOC=&gt;0,
                            T_SECTIONTIMER=&gt;0
                        },
                        Messages.PACKET.TRACK_TO_TRAIN.LEVEL_2_3_MOVEMENT_AUTHORITY.SubStructure1
                        {
                            L_SECTION=&gt;14,
                            Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.Section_Timer_information_to_follow,
                            D_SECTIONTIMERSTOPLOC=&gt;25,
                            T_SECTIONTIMER=&gt;70
                        }
                    ],
                    L_ENDSECTION=&gt;80,
                    Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                    T_SECTIONTIMER=&gt;0,
                    D_SECTIONTIMERSTOPLOC=&gt;0,
                    Q_ENDTIMER=&gt;Messages.Q_ENDTIMER.No_End_section_timer_information,
                    T_ENDTIMER=&gt;0,
                    D_ENDTIMERSTARTLOC=&gt;0,
                    Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.No_danger_point_information,
                    D_DP=&gt;0,
                    V_RELEASEDP=&gt;0,
                    Q_OVERLAP=&gt;Messages.Q_OVERLAP.No_overlap_information,
                    D_STARTOL=&gt;0,
                    T_OL=&gt;0,
                    D_OL=&gt;0,
                    V_RELEASEOL=&gt;0
                }
            }
        }
    ]
}</Action>
<Action>Kernel.MA.MA &lt;- EMPTY</Action>
</Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Available ( Kernel.MA.MA )</Expectation><Expectation
 Kind="Instantaneous"
>Available(Kernel.MA.MA.Sections)</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step5 - Check EOA + section info"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Kernel.MA.EndOfMovementAuthority().Location == 1310.0</Expectation><Expectation
 Kind="Instantaneous"
>(FIRST_IN Kernel.MA.MA.Sections).TimeOut == EMPTY</Expectation><Expectation
 Kind="Instantaneous"
>(FIRST_IN Kernel.MA.MA.Sections).Length == 170.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.EndOfMovementAuthority().Speed == 25.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase><TestCase
 Feature="0"
 Case="0"
 Name="The SectionTimerStopLocation shall be inside the section"
>
<ReqRef
 Id="3.8.3.4"
>
</ReqRef>
<Steps>
<Step
 TranslationRequired="FALSE"
 Name="Step1"
>
<SubSteps>
<SubStep
 Name="SubStep1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt;Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;8,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                LEVEL_1_MOVEMENT_AUTHORITY=&gt;Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.Message
                {
                    NID_PACKET=&gt;8,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    V_MAIN=&gt;16,
                    V_LOA=&gt;8,
                    T_LOA=&gt;200,
                    N_ITER=&gt;4,
                    Sequence1=&gt;
                    [
                        Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.SubStructure1
                        {
                            L_SECTION=&gt;120,
                            Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.Section_Timer_information_to_follow,
                            D_SECTIONTIMERSTOPLOC=&gt;20,
                            T_SECTIONTIMER=&gt;40
                        }
                    ],
                    L_ENDSECTION=&gt;1000,
                    Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                    T_SECTIONTIMER=&gt;0,
                    D_SECTIONTIMERSTOPLOC=&gt;0,
                    Q_ENDTIMER=&gt;Messages.Q_ENDTIMER.No_End_section_timer_information,
                    T_ENDTIMER=&gt;0,
                    D_ENDTIMERSTARTLOC=&gt;0,
                    Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.No_danger_point_information,
                    D_DP=&gt;0,
                    V_RELEASEDP=&gt;0,
                    Q_OVERLAP=&gt;Messages.Q_OVERLAP.No_overlap_information,
                    D_STARTOL=&gt;0,
                    T_OL=&gt;0,
                    D_OL=&gt;0,
                    V_RELEASEOL=&gt;0
                }
            }
        }
    ]
}</Action>
</Actions>
<Expectations>
<Expectation
 DeadLine="1"
>THERE_IS_IN Kernel.MA.MA.Sections | ( X.Length == 120.0 AND X.TimeOut.Distance == 40.0 )</Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase></TestCases>
</SubSequence><SubSequence
 D_LRBG=""
 Level=""
 Mode=""
 NID_LRBG=""
 Q_DIRLRBG=""
 Q_DIRTRAIN=""
 Q_DLRBG=""
 RBC_ID=""
 RBCPhone=""
 Name="MA structure - Overlap"
>
<TestCases>
<TestCase
 Feature="0"
 Case="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="MA structure - Overlap"
>
<ReqRef
 Id="3.8.1.1.d"
>
</ReqRef>
<ReqRef
 Id="3.8.3.3.c"
>
</ReqRef>
<ReqRef
 Id="3.8.1.1"
>
</ReqRef>
<ReqRef
 Id="3.8.3.3"
>
</ReqRef>
<Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step1 - Setup"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>Kernel.InitializeTestEnvironment()</Action>
</Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step2 - New MA received in BG message, level 1"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt;Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;8,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                LEVEL_1_MOVEMENT_AUTHORITY=&gt;Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.Message
                {
                    NID_PACKET=&gt;8,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    V_MAIN=&gt;16,
                    V_LOA=&gt;8,
                    T_LOA=&gt;200,
                    N_ITER=&gt;0,
                    Sequence1=&gt;[],
                    L_ENDSECTION=&gt;1000,
                    Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                    T_SECTIONTIMER=&gt;0,
                    D_SECTIONTIMERSTOPLOC=&gt;0,
                    Q_ENDTIMER=&gt;Messages.Q_ENDTIMER.No_End_section_timer_information,
                    T_ENDTIMER=&gt;0,
                    D_ENDTIMERSTARTLOC=&gt;0,
                    Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.No_danger_point_information,
                    D_DP=&gt;0,
                    V_RELEASEDP=&gt;0,
                    Q_OVERLAP=&gt;Messages.Q_OVERLAP.Overlap_information_to_follow,
                    D_STARTOL=&gt;100,
                    T_OL=&gt;40,
                    D_OL=&gt;1150,
                    V_RELEASEOL=&gt;6
                }
            }
        }
    ]
}</Action>
<Action>Kernel.MA.MA &lt;- EMPTY</Action>
<Action>BTM.LRBG &lt;- BTM.BaliseGroup
{
    NID =&gt; 9624,
    Orientation =&gt; Orientation.Nominal,
    Position =&gt; BTM.Position
    {
        OverReadingAmountOdo =&gt; 24.0,
        Position =&gt; 3500.0,
        UnderReadingAmountOdo =&gt; 21.0
    }
}</Action>
<Action>Odometry.Accuracy &lt;- Odometry.OdometerAccuracy
{
    D_ura =&gt; 41.0,
    D_ora =&gt; 36.0,
    V_ora =&gt; 0.0,
    V_ura =&gt; 0.0
}</Action>
</Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Available ( Kernel.MA.MA )</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.MA.EndSection.Overlap.ReleaseSpeed == 30.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.MA.EndSection.Overlap.Distance == 1150.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.MA.EndSection.Overlap.TimerDistance == 100.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.MA.EndSection.Overlap.TimeOut == 40.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step3 - New MA received in BG message, level 2"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt;Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;8,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                LEVEL_2_3_MOVEMENT_AUTHORITY=&gt;Messages.PACKET.TRACK_TO_TRAIN.LEVEL_2_3_MOVEMENT_AUTHORITY.Message
                {
                    NID_PACKET=&gt;8,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._10_m_scaleC,
                    V_LOA=&gt;5,
                    T_LOA=&gt;150,
                    N_ITER=&gt;0,
                    Sequence1=&gt;[],
                    L_ENDSECTION=&gt;80,
                    Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                    T_SECTIONTIMER=&gt;0,
                    D_SECTIONTIMERSTOPLOC=&gt;0,
                    Q_ENDTIMER=&gt;Messages.Q_ENDTIMER.No_End_section_timer_information,
                    T_ENDTIMER=&gt;0,
                    D_ENDTIMERSTARTLOC=&gt;0,
                    Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.No_danger_point_information,
                    D_DP=&gt;0,
                    V_RELEASEDP=&gt;0,
                    Q_OVERLAP=&gt;Messages.Q_OVERLAP.Overlap_information_to_follow,
                    D_STARTOL=&gt;4,
                    T_OL=&gt;70,
                    D_OL=&gt;90,
                    V_RELEASEOL=&gt;2
                }
            }
        }
    ]
}</Action>
<Action>Kernel.MA.MA &lt;- EMPTY</Action>
</Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Available ( Kernel.MA.MA )</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.MA.EndSection.Overlap.TimeOut == 70.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.MA.EndSection.Overlap.ReleaseSpeed == 10.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.MA.EndSection.Overlap.Distance == 900.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.MA.EndSection.Overlap.TimerDistance == 40.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase></TestCases>
</SubSequence><SubSequence
 D_LRBG=""
 Level=""
 Mode=""
 NID_LRBG=""
 Q_DIRLRBG=""
 Q_DIRTRAIN=""
 Q_DLRBG=""
 RBC_ID=""
 RBCPhone=""
 Name="Signalling related speed restrictions"
>
<TestCases>
<TestCase
 Feature="0"
 Case="0"
 Implemented="TRUE"
 Name="Signalling related speed restrictions"
>
<ReqRef
 Id="3.11.2.2.e"
>
</ReqRef>
<ReqRef
 Id="3.11.6.1"
>
</ReqRef>
<Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step1 - Setup"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>Kernel.InitializeTestEnvironment()</Action>
</Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step2 - New MA received"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt;Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;8,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                LEVEL_1_MOVEMENT_AUTHORITY=&gt;Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.Message
                {
                    NID_PACKET=&gt;8,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    V_MAIN=&gt;17,
                    V_LOA=&gt;8,
                    T_LOA=&gt;200,
                    N_ITER=&gt;0,
                    Sequence1=&gt;[],
                    L_ENDSECTION=&gt;1000,
                    Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                    T_SECTIONTIMER=&gt;0,
                    D_SECTIONTIMERSTOPLOC=&gt;0,
                    Q_ENDTIMER=&gt;Messages.Q_ENDTIMER.No_End_section_timer_information,
                    T_ENDTIMER=&gt;0,
                    D_ENDTIMERSTARTLOC=&gt;0,
                    Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.No_danger_point_information,
                    D_DP=&gt;0,
                    V_RELEASEDP=&gt;0,
                    Q_OVERLAP=&gt;Messages.Q_OVERLAP.No_overlap_information,
                    D_STARTOL=&gt;0,
                    T_OL=&gt;0,
                    D_OL=&gt;0,
                    V_RELEASEOL=&gt;0
                }
            }
        }
    ]
}</Action>
<Action>Kernel.Level.Value &lt;- Level.L1</Action>
<Action>BTM.LRBG &lt;- BTM.BaliseGroup
{
    NID =&gt; 9630,
    Orientation =&gt; Orientation.Nominal,
    Position =&gt; BTM.Position
    {
        OverReadingAmountOdo =&gt; 13.0,
        Position =&gt; 5000.0,
        UnderReadingAmountOdo =&gt; 12.0
    }
}</Action>
<Action>Odometry.Accuracy &lt;- Odometry.OdometerAccuracy
{
    D_ura =&gt; 15.0,
    D_ora =&gt; 17.0,
    V_ora =&gt; 0.0,
    V_ura =&gt; 0.0
}</Action>
</Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Kernel.MA.SignallingRelatedSpeedRestrictions ( 5000.0 ) == 85.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step3 - Level changes"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>Kernel.Level.Value &lt;- Level.L2</Action>
</Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Kernel.MA.SignallingRelatedSpeedRestrictions ( 0.0 ) == Default.BaseTypes.Speed.MaxSpeed</Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase></TestCases>
</SubSequence></SubSequences>
</Frame>
